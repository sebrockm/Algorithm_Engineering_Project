Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 62.05     30.93    30.93 1320643772     0.00     0.00  labelCross(Label const&, Label const&)
 26.00     43.89    12.96  5924177     0.00     0.01  getCrossing(Label const&, KDTree*)
  2.93     45.35     1.46 35972212     0.00     0.00  void std::__introsort_loop<__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int>(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int)
  2.15     46.42     1.07 46179194     0.00     0.00  _ZNSt6vectorIP5LabelSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_
  1.79     47.31     0.89 232781693     0.00     0.00  Label::b() const
  0.98     47.80     0.49 90101741     0.00     0.00  Label::minX() const
  0.76     48.18     0.38    10040     0.04     4.90  Heuristic1::tryToEnable(Label&, int, std::vector<Label*, std::allocator<Label*> >&, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > >&)
  0.72     48.54     0.36 90101741     0.00     0.00  Label::maxX() const
  0.50     48.80     0.25     9387     0.03     0.03  Label::name() const
  0.44     49.02     0.22 40219652     0.00     0.00  Label::maxY() const
  0.42     49.23     0.21 40219652     0.00     0.00  Label::minY() const
  0.42     49.44     0.21                             getCrossing(Label const&, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >)
  0.38     49.63     0.19  4502794     0.00     0.00  void std::vector<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > >, std::allocator<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > > > >::_M_emplace_back_aux<Label::Pos, std::vector<Label*, std::allocator<Label*> > >(Label::Pos&&, std::vector<Label*, std::allocator<Label*> >&&)
  0.18     49.72     0.09     9387     0.01     0.01  Label::ys() const
  0.12     49.78     0.06                             void std::__adjust_heap<__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, Label*>(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int, Label*)
  0.02     49.79     0.01  7449885     0.00     0.00  Label::getPos() const
  0.02     49.80     0.01  5787353     0.00     0.00  Label::rotateCW()
  0.02     49.81     0.01  1397815     0.00     0.00  _ZNSt6vectorIP5LabelSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_
  0.02     49.82     0.01   884716     0.00     0.00  std::vector<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > >, std::allocator<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > > > >::erase(__gnu_cxx::__normal_iterator<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > >*, std::vector<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > >, std::allocator<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > > > > >, __gnu_cxx::__normal_iterator<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > >*, std::vector<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > >, std::allocator<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > > > > >)
  0.02     49.83     0.01      913     0.01     0.01  __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > > std::__stable_partition_adaptive<__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#8}, int>(createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#8}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#8}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#8}, int, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#8})
  0.02     49.84     0.01        1    10.00    28.79  createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)
  0.02     49.85     0.01        1    10.00    10.00  std::_Sp_counted_ptr<KDTree*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
  0.02     49.86     0.01                             Label::rotateCCW()
  0.00     49.86     0.00  2908253     0.00     0.00  Label::setPos(Label::Pos)
  0.00     49.86     0.00   225135     0.00     0.00  Label::h() const
  0.00     49.86     0.00   225135     0.00     0.00  Label::l() const
  0.00     49.86     0.00   192089     0.00     0.00  void std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > >::_M_emplace_back_aux<Label*, Label::Pos&>(Label*&&, Label::Pos&)
  0.00     49.86     0.00   122818     0.00     0.00  Label::x() const
  0.00     49.86     0.00    72575     0.00     0.00  Label::y() const
  0.00     49.86     0.00    55437     0.00     0.00  void std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::pair<Label*, Label::Pos>*, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > > > >(__gnu_cxx::__normal_iterator<std::pair<Label*, Label::Pos>*, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > > >, __gnu_cxx::__normal_iterator<std::pair<Label*, Label::Pos>*, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > > >, __gnu_cxx::__normal_iterator<std::pair<Label*, Label::Pos>*, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > > >, std::forward_iterator_tag)
  0.00     49.86     0.00    37557     0.00     0.00  frame_dummy
  0.00     49.86     0.00    10040     0.00     4.90  Heuristic1::tryToEnable(Label&)
  0.00     49.86     0.00    10040     0.00     0.00  Label::enable()
  0.00     49.86     0.00     9387     0.00     0.00  Label::Label(int, int, int, int, std::string, int)
  0.00     49.86     0.00     9387     0.00     0.00  Label::xs() const
  0.00     49.86     0.00     9386     0.00     0.00  void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}>(__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1})
  0.00     49.86     0.00     7093     0.00     0.00  std::_Sp_counted_ptr<KDTree*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
  0.00     49.86     0.00     2633     0.00     0.00  __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > > std::__stable_partition_adaptive<__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#6}, int>(createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#6}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#6}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#6}, int, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#6})
  0.00     49.86     0.00     2324     0.00     0.00  __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > > std::__stable_partition_adaptive<__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#5}, int>(createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#5}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#5}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#5}, int, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#5})
  0.00     49.86     0.00     1306     0.00     0.00  Label::disable()
  0.00     49.86     0.00      913     0.00     0.00  __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > > std::__stable_partition_adaptive<__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#7}, int>(createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#7}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#7}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#7}, int, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#7})
  0.00     49.86     0.00       15     0.00     0.00  _ZNSt6vectorI5LabelSaIS0_EE19_M_emplace_back_auxIJRiS4_S4_S4_RSsiEEEvDpOT_
  0.00     49.86     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z10labelCrossRK5LabelS1_
  0.00     49.86     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z12createKDTreeN9__gnu_cxx17__normal_iteratorIPP5LabelSt6vectorIS2_SaIS2_EEEES7_ii
  0.00     49.86     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z15isPosOkUntilNowN9__gnu_cxx17__normal_iteratorIP5LabelSt6vectorIS1_SaIS1_EEEES6_
  0.00     49.86     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z5usagePKc
  0.00     49.86     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN10Heuristic1C2ERSt6vectorI5LabelSaIS1_EEi
  0.00     49.86     0.00        1     0.00    28.79  Heuristic1::Heuristic1(std::vector<Label, std::allocator<Label> >&, int)
  0.00     49.86     0.00        1     0.00     0.00  void std::__insertion_sort<__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}>(__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1})
  0.00     49.86     0.00        1     0.00     0.00  void std::__introsort_loop<__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, int, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}>(__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}, int, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1})

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.02% of 49.86 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     99.4    0.00   49.58                 writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int) [1]
                0.00   49.20   10040/10040       Heuristic1::tryToEnable(Label&) [3]
                0.25    0.00    9387/9387        Label::name() const [11]
                0.09    0.00    9387/9387        Label::ys() const [16]
                0.00    0.03       1/1           Heuristic1::Heuristic1(std::vector<Label, std::allocator<Label> >&, int) [18]
                0.01    0.00       1/1           std::_Sp_counted_ptr<KDTree*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [25]
                0.00    0.00   28161/232781693     Label::b() const [8]
                0.00    0.00    9387/9387        Label::xs() const [45]
                0.00    0.00    9387/225135      Label::h() const [37]
                0.00    0.00    9387/225135      Label::l() const [38]
                0.00    0.00    9387/72575       Label::y() const [41]
                0.00    0.00    9387/122818      Label::x() const [40]
                0.00    0.00    9387/37557       frame_dummy [30]
                0.00    0.00    9371/9386        void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}>(__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}) [46]
                0.00    0.00       1/1           void std::__introsort_loop<__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, int, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}>(__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}, int, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}) [56]
                0.00    0.00       1/1           void std::__insertion_sort<__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}>(__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}) [55]
                0.00    0.00       1/7093        std::_Sp_counted_ptr<KDTree*, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [47]
-----------------------------------------------
                             1515668             Heuristic1::tryToEnable(Label&, int, std::vector<Label*, std::allocator<Label*> >&, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > >&) [2]
                0.38   48.82   10040/10040       Heuristic1::tryToEnable(Label&) [3]
[2]     98.7    0.38   48.82   10040+1515668 Heuristic1::tryToEnable(Label&, int, std::vector<Label*, std::allocator<Label*> >&, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > >&) [2]
               12.96   35.62 5924177/5924177     getCrossing(Label const&, KDTree*) [4]
                0.19    0.00 4502794/4502794     void std::vector<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > >, std::allocator<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > > > >::_M_emplace_back_aux<Label::Pos, std::vector<Label*, std::allocator<Label*> > >(Label::Pos&&, std::vector<Label*, std::allocator<Label*> >&&) [15]
                0.01    0.00 7449885/7449885     Label::getPos() const [21]
                0.01    0.00 5787353/5787353     Label::rotateCW() [22]
                0.01    0.00  884716/884716      std::vector<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > >, std::allocator<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > > > >::erase(__gnu_cxx::__normal_iterator<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > >*, std::vector<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > >, std::allocator<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > > > > >, __gnu_cxx::__normal_iterator<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > >*, std::vector<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > >, std::allocator<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > > > > >) [24]
                0.01    0.00 1397800/1397815     _ZNSt6vectorIP5LabelSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_ [23]
                0.00    0.00 2898213/2908253     Label::setPos(Label::Pos) [36]
                0.00    0.00  192089/192089      void std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > >::_M_emplace_back_aux<Label*, Label::Pos&>(Label*&&, Label::Pos&) [39]
                0.00    0.00   55437/55437       void std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::pair<Label*, Label::Pos>*, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > > > >(__gnu_cxx::__normal_iterator<std::pair<Label*, Label::Pos>*, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > > >, __gnu_cxx::__normal_iterator<std::pair<Label*, Label::Pos>*, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > > >, __gnu_cxx::__normal_iterator<std::pair<Label*, Label::Pos>*, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > > >, std::forward_iterator_tag) [42]
                             1515668             Heuristic1::tryToEnable(Label&, int, std::vector<Label*, std::allocator<Label*> >&, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > >&) [2]
-----------------------------------------------
                0.00   49.20   10040/10040       writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int) [1]
[3]     98.7    0.00   49.20   10040         Heuristic1::tryToEnable(Label&) [3]
                0.38   48.82   10040/10040       Heuristic1::tryToEnable(Label&, int, std::vector<Label*, std::allocator<Label*> >&, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > >&) [2]
                0.00    0.00   10040/10040       Label::enable() [43]
                0.00    0.00   10040/2908253     Label::setPos(Label::Pos) [36]
                0.00    0.00    1306/1306        Label::disable() [48]
-----------------------------------------------
                             175175284             getCrossing(Label const&, KDTree*) [4]
               12.96   35.62 5924177/5924177     Heuristic1::tryToEnable(Label&, int, std::vector<Label*, std::allocator<Label*> >&, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > >&) [2]
[4]     97.5   12.96   35.62 5924177+175175284 getCrossing(Label const&, KDTree*) [4]
               30.93    0.00 1320643772/1320643772     labelCross(Label const&, Label const&) [5]
                1.46    0.00 35972212/35972212     void std::__introsort_loop<__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int>(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int) [6]
                1.07    0.00 46179194/46179194     _ZNSt6vectorIP5LabelSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_ [7]
                0.89    0.00 232753532/232781693     Label::b() const [8]
                0.49    0.00 89638618/90101741     Label::minX() const [9]
                0.36    0.00 89638618/90101741     Label::maxX() const [10]
                0.22    0.00 39806772/40219652     Label::maxY() const [12]
                0.21    0.00 39806772/40219652     Label::minY() const [13]
                             175175284             getCrossing(Label const&, KDTree*) [4]
-----------------------------------------------
               30.93    0.00 1320643772/1320643772     getCrossing(Label const&, KDTree*) [4]
[5]     62.0   30.93    0.00 1320643772         labelCross(Label const&, Label const&) [5]
-----------------------------------------------
                1.46    0.00 35972212/35972212     getCrossing(Label const&, KDTree*) [4]
[6]      2.9    1.46    0.00 35972212         void std::__introsort_loop<__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int>(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int) [6]
-----------------------------------------------
                1.07    0.00 46179194/46179194     getCrossing(Label const&, KDTree*) [4]
[7]      2.1    1.07    0.00 46179194         _ZNSt6vectorIP5LabelSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_ [7]
-----------------------------------------------
                0.00    0.00   28161/232781693     writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int) [1]
                0.89    0.00 232753532/232781693     getCrossing(Label const&, KDTree*) [4]
[8]      1.8    0.89    0.00 232781693         Label::b() const [8]
-----------------------------------------------
                0.00    0.00   70601/90101741     __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > > std::__stable_partition_adaptive<__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#5}, int>(createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#5}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#5}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#5}, int, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#5}) [28]
                0.00    0.00  392522/90101741     createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int) [19]
                0.49    0.00 89638618/90101741     getCrossing(Label const&, KDTree*) [4]
[9]      1.0    0.49    0.00 90101741         Label::minX() const [9]
-----------------------------------------------
                0.00    0.00  103936/90101741     __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > > std::__stable_partition_adaptive<__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#6}, int>(createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#6}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#6}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#6}, int, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#6}) [27]
                0.00    0.00  359187/90101741     createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int) [19]
                0.36    0.00 89638618/90101741     getCrossing(Label const&, KDTree*) [4]
[10]     0.7    0.36    0.00 90101741         Label::maxX() const [10]
-----------------------------------------------
                0.25    0.00    9387/9387        writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int) [1]
[11]     0.5    0.25    0.00    9387         Label::name() const [11]
-----------------------------------------------
                0.00    0.00   54549/40219652     __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > > std::__stable_partition_adaptive<__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#8}, int>(createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#8}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#8}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#8}, int, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#8}) [20]
                0.00    0.00  358331/40219652     createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int) [19]
                0.22    0.00 39806772/40219652     getCrossing(Label const&, KDTree*) [4]
[12]     0.4    0.22    0.00 40219652         Label::maxY() const [12]
-----------------------------------------------
                0.00    0.00   60165/40219652     __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > > std::__stable_partition_adaptive<__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#7}, int>(createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#7}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#7}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#7}, int, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#7}) [29]
                0.00    0.00  352715/40219652     createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int) [19]
                0.21    0.00 39806772/40219652     getCrossing(Label const&, KDTree*) [4]
[13]     0.4    0.21    0.00 40219652         Label::minY() const [13]
-----------------------------------------------
                                                 <spontaneous>
[14]     0.4    0.21    0.00                 getCrossing(Label const&, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >) [14]
-----------------------------------------------
                0.19    0.00 4502794/4502794     Heuristic1::tryToEnable(Label&, int, std::vector<Label*, std::allocator<Label*> >&, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > >&) [2]
[15]     0.4    0.19    0.00 4502794         void std::vector<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > >, std::allocator<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > > > >::_M_emplace_back_aux<Label::Pos, std::vector<Label*, std::allocator<Label*> > >(Label::Pos&&, std::vector<Label*, std::allocator<Label*> >&&) [15]
-----------------------------------------------
                0.09    0.00    9387/9387        writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int) [1]
[16]     0.2    0.09    0.00    9387         Label::ys() const [16]
-----------------------------------------------
                                                 <spontaneous>
[17]     0.1    0.06    0.00                 void std::__adjust_heap<__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, Label*>(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int, Label*) [17]
-----------------------------------------------
                0.00    0.03       1/1           writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int) [1]
[18]     0.1    0.00    0.03       1         Heuristic1::Heuristic1(std::vector<Label, std::allocator<Label> >&, int) [18]
                0.01    0.02       1/1           createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int) [19]
                0.00    0.00      15/1397815     _ZNSt6vectorIP5LabelSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_ [23]
-----------------------------------------------
                                7092             createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int) [19]
                0.01    0.02       1/1           Heuristic1::Heuristic1(std::vector<Label, std::allocator<Label> >&, int) [18]
[19]     0.1    0.01    0.02       1+7092    createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int) [19]
                0.01    0.00     913/913         __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > > std::__stable_partition_adaptive<__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#8}, int>(createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#8}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#8}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#8}, int, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#8}) [20]
                0.00    0.00  392522/90101741     Label::minX() const [9]
                0.00    0.00  358331/40219652     Label::maxY() const [12]
                0.00    0.00  352715/40219652     Label::minY() const [13]
                0.00    0.00  359187/90101741     Label::maxX() const [10]
                0.00    0.00    2633/2633        __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > > std::__stable_partition_adaptive<__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#6}, int>(createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#6}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#6}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#6}, int, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#6}) [27]
                0.00    0.00    2324/2324        __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > > std::__stable_partition_adaptive<__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#5}, int>(createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#5}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#5}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#5}, int, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#5}) [28]
                0.00    0.00     913/913         __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > > std::__stable_partition_adaptive<__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#7}, int>(createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#7}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#7}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#7}, int, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#7}) [29]
                0.00    0.00  113431/122818      Label::x() const [40]
                0.00    0.00   63188/72575       Label::y() const [41]
                                7092             createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int) [19]
-----------------------------------------------
                0.01    0.00     913/913         createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int) [19]
[20]     0.0    0.01    0.00     913         __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > > std::__stable_partition_adaptive<__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#8}, int>(createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#8}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#8}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#8}, int, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#8}) [20]
                0.00    0.00   54549/40219652     Label::maxY() const [12]
-----------------------------------------------
                0.01    0.00 7449885/7449885     Heuristic1::tryToEnable(Label&, int, std::vector<Label*, std::allocator<Label*> >&, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > >&) [2]
[21]     0.0    0.01    0.00 7449885         Label::getPos() const [21]
-----------------------------------------------
                0.01    0.00 5787353/5787353     Heuristic1::tryToEnable(Label&, int, std::vector<Label*, std::allocator<Label*> >&, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > >&) [2]
[22]     0.0    0.01    0.00 5787353         Label::rotateCW() [22]
-----------------------------------------------
                0.00    0.00      15/1397815     Heuristic1::Heuristic1(std::vector<Label, std::allocator<Label> >&, int) [18]
                0.01    0.00 1397800/1397815     Heuristic1::tryToEnable(Label&, int, std::vector<Label*, std::allocator<Label*> >&, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > >&) [2]
[23]     0.0    0.01    0.00 1397815         _ZNSt6vectorIP5LabelSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_ [23]
-----------------------------------------------
                0.01    0.00  884716/884716      Heuristic1::tryToEnable(Label&, int, std::vector<Label*, std::allocator<Label*> >&, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > >&) [2]
[24]     0.0    0.01    0.00  884716         std::vector<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > >, std::allocator<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > > > >::erase(__gnu_cxx::__normal_iterator<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > >*, std::vector<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > >, std::allocator<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > > > > >, __gnu_cxx::__normal_iterator<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > >*, std::vector<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > >, std::allocator<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > > > > >) [24]
-----------------------------------------------
                                7092             std::_Sp_counted_ptr<KDTree*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [25]
                0.01    0.00       1/1           writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int) [1]
[25]     0.0    0.01    0.00       1+7092    std::_Sp_counted_ptr<KDTree*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [25]
                0.00    0.00    7092/7093        std::_Sp_counted_ptr<KDTree*, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [47]
                                7092             std::_Sp_counted_ptr<KDTree*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [25]
-----------------------------------------------
                                                 <spontaneous>
[26]     0.0    0.01    0.00                 Label::rotateCCW() [26]
-----------------------------------------------
                0.00    0.00    2633/2633        createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int) [19]
[27]     0.0    0.00    0.00    2633         __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > > std::__stable_partition_adaptive<__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#6}, int>(createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#6}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#6}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#6}, int, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#6}) [27]
                0.00    0.00  103936/90101741     Label::maxX() const [10]
-----------------------------------------------
                0.00    0.00    2324/2324        createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int) [19]
[28]     0.0    0.00    0.00    2324         __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > > std::__stable_partition_adaptive<__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#5}, int>(createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#5}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#5}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#5}, int, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#5}) [28]
                0.00    0.00   70601/90101741     Label::minX() const [9]
-----------------------------------------------
                0.00    0.00     913/913         createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int) [19]
[29]     0.0    0.00    0.00     913         __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > > std::__stable_partition_adaptive<__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#7}, int>(createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#7}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#7}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#7}, int, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#7}) [29]
                0.00    0.00   60165/40219652     Label::minY() const [13]
-----------------------------------------------
                0.00    0.00       7/37557       parse_options(int, char**, std::string&, std::string&, std::string&, int&, bool&) [58]
                0.00    0.00      15/37557       _ZNSt6vectorI5LabelSaIS0_EE19_M_emplace_back_auxIJRiS4_S4_S4_RSsiEEEvDpOT_ [49]
                0.00    0.00    9387/37557       writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int) [1]
                0.00    0.00    9387/37557       std::vector<Label, std::allocator<Label> >::~vector() [79]
                0.00    0.00   18761/37557       fileParser(std::string const&, std::vector<Label, std::allocator<Label> >&, bool) [57]
[30]     0.0    0.00    0.00   37557         frame_dummy [30]
-----------------------------------------------
                0.00    0.00   10040/2908253     Heuristic1::tryToEnable(Label&) [3]
                0.00    0.00 2898213/2908253     Heuristic1::tryToEnable(Label&, int, std::vector<Label*, std::allocator<Label*> >&, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > >&) [2]
[36]     0.0    0.00    0.00 2908253         Label::setPos(Label::Pos) [36]
-----------------------------------------------
                0.00    0.00      30/225135      void std::__insertion_sort<__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}>(__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}) [55]
                0.00    0.00    9387/225135      writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int) [1]
                0.00    0.00   18928/225135      void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}>(__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}) [46]
                0.00    0.00  196790/225135      void std::__introsort_loop<__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, int, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}>(__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}, int, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}) [56]
[37]     0.0    0.00    0.00  225135         Label::h() const [37]
-----------------------------------------------
                0.00    0.00      30/225135      void std::__insertion_sort<__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}>(__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}) [55]
                0.00    0.00    9387/225135      writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int) [1]
                0.00    0.00   18928/225135      void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}>(__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}) [46]
                0.00    0.00  196790/225135      void std::__introsort_loop<__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, int, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}>(__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}, int, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}) [56]
[38]     0.0    0.00    0.00  225135         Label::l() const [38]
-----------------------------------------------
                0.00    0.00  192089/192089      Heuristic1::tryToEnable(Label&, int, std::vector<Label*, std::allocator<Label*> >&, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > >&) [2]
[39]     0.0    0.00    0.00  192089         void std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > >::_M_emplace_back_aux<Label*, Label::Pos&>(Label*&&, Label::Pos&) [39]
-----------------------------------------------
                0.00    0.00    9387/122818      writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int) [1]
                0.00    0.00  113431/122818      createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int) [19]
[40]     0.0    0.00    0.00  122818         Label::x() const [40]
-----------------------------------------------
                0.00    0.00    9387/72575       writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int) [1]
                0.00    0.00   63188/72575       createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int) [19]
[41]     0.0    0.00    0.00   72575         Label::y() const [41]
-----------------------------------------------
                0.00    0.00   55437/55437       Heuristic1::tryToEnable(Label&, int, std::vector<Label*, std::allocator<Label*> >&, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > >&) [2]
[42]     0.0    0.00    0.00   55437         void std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::pair<Label*, Label::Pos>*, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > > > >(__gnu_cxx::__normal_iterator<std::pair<Label*, Label::Pos>*, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > > >, __gnu_cxx::__normal_iterator<std::pair<Label*, Label::Pos>*, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > > >, __gnu_cxx::__normal_iterator<std::pair<Label*, Label::Pos>*, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > > >, std::forward_iterator_tag) [42]
-----------------------------------------------
                0.00    0.00   10040/10040       Heuristic1::tryToEnable(Label&) [3]
[43]     0.0    0.00    0.00   10040         Label::enable() [43]
-----------------------------------------------
                0.00    0.00      15/9387        _ZNSt6vectorI5LabelSaIS0_EE19_M_emplace_back_auxIJRiS4_S4_S4_RSsiEEEvDpOT_ [49]
                0.00    0.00    9372/9387        fileParser(std::string const&, std::vector<Label, std::allocator<Label> >&, bool) [57]
[44]     0.0    0.00    0.00    9387         Label::Label(int, int, int, int, std::string, int) [44]
-----------------------------------------------
                0.00    0.00    9387/9387        writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int) [1]
[45]     0.0    0.00    0.00    9387         Label::xs() const [45]
-----------------------------------------------
                0.00    0.00      15/9386        void std::__insertion_sort<__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}>(__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}) [55]
                0.00    0.00    9371/9386        writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int) [1]
[46]     0.0    0.00    0.00    9386         void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}>(__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}) [46]
                0.00    0.00   18928/225135      Label::h() const [37]
                0.00    0.00   18928/225135      Label::l() const [38]
-----------------------------------------------
                0.00    0.00       1/7093        writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int) [1]
                0.00    0.00    7092/7093        std::_Sp_counted_ptr<KDTree*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [25]
[47]     0.0    0.00    0.00    7093         std::_Sp_counted_ptr<KDTree*, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [47]
-----------------------------------------------
                0.00    0.00    1306/1306        Heuristic1::tryToEnable(Label&) [3]
[48]     0.0    0.00    0.00    1306         Label::disable() [48]
-----------------------------------------------
                0.00    0.00      15/15          fileParser(std::string const&, std::vector<Label, std::allocator<Label> >&, bool) [57]
[49]     0.0    0.00    0.00      15         _ZNSt6vectorI5LabelSaIS0_EE19_M_emplace_back_auxIJRiS4_S4_S4_RSsiEEEvDpOT_ [49]
                0.00    0.00      15/9387        Label::Label(int, int, int, int, std::string, int) [44]
                0.00    0.00      15/37557       frame_dummy [30]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [97]
[50]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z10labelCrossRK5LabelS1_ [50]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [97]
[51]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z12createKDTreeN9__gnu_cxx17__normal_iteratorIPP5LabelSt6vectorIS2_SaIS2_EEEES7_ii [51]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [97]
[52]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z15isPosOkUntilNowN9__gnu_cxx17__normal_iteratorIP5LabelSt6vectorIS1_SaIS1_EEEES6_ [52]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [97]
[53]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z5usagePKc [53]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [97]
[54]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN10Heuristic1C2ERSt6vectorI5LabelSaIS1_EEi [54]
-----------------------------------------------
                0.00    0.00       1/1           writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int) [1]
[55]     0.0    0.00    0.00       1         void std::__insertion_sort<__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}>(__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}) [55]
                0.00    0.00      30/225135      Label::h() const [37]
                0.00    0.00      30/225135      Label::l() const [38]
                0.00    0.00      15/9386        void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}>(__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}) [46]
-----------------------------------------------
                                 806             void std::__introsort_loop<__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, int, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}>(__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}, int, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}) [56]
                0.00    0.00       1/1           writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int) [1]
[56]     0.0    0.00    0.00       1+806     void std::__introsort_loop<__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, int, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}>(__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}, int, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}) [56]
                0.00    0.00  196790/225135      Label::h() const [37]
                0.00    0.00  196790/225135      Label::l() const [38]
                                 806             void std::__introsort_loop<__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, int, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}>(__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}, int, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}) [56]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.


Index by function name

  [50] _GLOBAL__sub_I__Z10labelCrossRK5LabelS1_ [44] Label::Label(int, int, int, int, std::string, int) [7] _ZNSt6vectorIP5LabelSaIS1_EE19_M_emplace_back_auxIJRKS1_EEEvDpOT_
  [51] _GLOBAL__sub_I__Z12createKDTreeN9__gnu_cxx17__normal_iteratorIPP5LabelSt6vectorIS2_SaIS2_EEEES7_ii [8] Label::b() const [23] _ZNSt6vectorIP5LabelSaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_
  [52] _GLOBAL__sub_I__Z15isPosOkUntilNowN9__gnu_cxx17__normal_iteratorIP5LabelSt6vectorIS1_SaIS1_EEEES6_ [37] Label::h() const [15] void std::vector<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > >, std::allocator<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > > > >::_M_emplace_back_aux<Label::Pos, std::vector<Label*, std::allocator<Label*> > >(Label::Pos&&, std::vector<Label*, std::allocator<Label*> >&&)
  [53] _GLOBAL__sub_I__Z5usagePKc [38] Label::l() const   [24] std::vector<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > >, std::allocator<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > > > >::erase(__gnu_cxx::__normal_iterator<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > >*, std::vector<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > >, std::allocator<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > > > > >, __gnu_cxx::__normal_iterator<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > >*, std::vector<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > >, std::allocator<std::pair<Label::Pos, std::vector<Label*, std::allocator<Label*> > > > > >)
  [54] _GLOBAL__sub_I__ZN10Heuristic1C2ERSt6vectorI5LabelSaIS1_EEi [40] Label::x() const [42] void std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > >::_M_range_insert<__gnu_cxx::__normal_iterator<std::pair<Label*, Label::Pos>*, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > > > >(__gnu_cxx::__normal_iterator<std::pair<Label*, Label::Pos>*, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > > >, __gnu_cxx::__normal_iterator<std::pair<Label*, Label::Pos>*, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > > >, __gnu_cxx::__normal_iterator<std::pair<Label*, Label::Pos>*, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > > >, std::forward_iterator_tag)
   [5] labelCross(Label const&, Label const&) [41] Label::y() const [39] void std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > >::_M_emplace_back_aux<Label*, Label::Pos&>(Label*&&, Label::Pos&)
  [14] getCrossing(Label const&, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >) [45] Label::xs() const [17] void std::__adjust_heap<__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, Label*>(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int, Label*)
   [4] getCrossing(Label const&, KDTree*) [16] Label::ys() const [55] void std::__insertion_sort<__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}>(__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1})
  [19] createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int) [10] Label::maxX() const [56] void std::__introsort_loop<__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, int, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}>(__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}, int, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1})
   [3] Heuristic1::tryToEnable(Label&) [12] Label::maxY() const [6] void std::__introsort_loop<__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int>(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int)
   [2] Heuristic1::tryToEnable(Label&, int, std::vector<Label*, std::allocator<Label*> >&, std::vector<std::pair<Label*, Label::Pos>, std::allocator<std::pair<Label*, Label::Pos> > >&) [9] Label::minX() const [46] void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1}>(__gnu_cxx::__normal_iterator<Label*, std::vector<Label, std::allocator<Label> > >, writeSolution(std::vector<Label, std::allocator<Label> >&, std::string const&, int)::{lambda(Label const&, Label const&)#1})
  [18] Heuristic1::Heuristic1(std::vector<Label, std::allocator<Label> >&, int) [13] Label::minY() const [28] __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > > std::__stable_partition_adaptive<__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#5}, int>(createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#5}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#5}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#5}, int, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#5})
  [43] Label::enable()        [11] Label::name() const    [27] __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > > std::__stable_partition_adaptive<__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#6}, int>(createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#6}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#6}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#6}, int, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#6})
  [36] Label::setPos(Label::Pos) [21] Label::getPos() const [29] __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > > std::__stable_partition_adaptive<__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#7}, int>(createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#7}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#7}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#7}, int, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#7})
  [48] Label::disable()       [47] std::_Sp_counted_ptr<KDTree*, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [20] __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > > std::__stable_partition_adaptive<__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#8}, int>(createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#8}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#8}, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#8}, int, Label**, createKDTree(__gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, __gnu_cxx::__normal_iterator<Label**, std::vector<Label*, std::allocator<Label*> > >, int, int)::{lambda(Label*)#8})
  [22] Label::rotateCW()      [25] std::_Sp_counted_ptr<KDTree*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [30] frame_dummy
  [26] Label::rotateCCW()     [49] _ZNSt6vectorI5LabelSaIS0_EE19_M_emplace_back_auxIJRiS4_S4_S4_RSsiEEEvDpOT_
